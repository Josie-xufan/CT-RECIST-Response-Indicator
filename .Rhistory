library(dplyr)
data_root = './data'
survival_data_path = paste(data_root, "survival_record.xlsx", sep = "/")
D_V_results_path = paste(data_root, "D_V_all.csv", sep = "/")
survival_data = read.xlsx(survival_data_path, sheet = 'Sheet1')
survival_data = survival_data[-which(is.na(survival_data$`结局/复发`)),]
survival_data = survival_data[-which(is.na(survival_data$time)),]
survival_data = survival_data[survival_data$随访!="死亡几年不祥", ]
survival_data$status = 1-survival_data$`结局/复发`
D_V_results = read.csv(D_V_results_path)
for(i in 1: dim(survival_data)[1]){
p_id = survival_data$patient.reindex[i]
t1 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]])==4){
t1 = paste(t1, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][4], sep="_")
}
t2 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]])==4){
t2 = paste(t2, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][4], sep="_")
}
t1_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_Maximum3DDiameter
t1_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_MeshVolume
t2_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_Maximum3DDiameter
t2_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_MeshVolume
delta_D = (t2_D-t1_D)/t1_D
delta_V = (t2_V-t1_V)/t1_V
survival_data[survival_data$patient.reindex==p_id,]$delta_D = delta_D
survival_data[survival_data$patient.reindex==p_id,]$delta_V = delta_V
}
survival_data = select(survival_data, time, delta_D, delta_V, status, "年龄", "性别")
survival_data = select(survival_data, time, delta_D, delta_V, status)
#delta_d cutoff: 0.14
#delta_v cutoff: -0.1393279
res.cut <- surv_cutpoint(survival_data, time = "time", event = "status", variables = c("delta_D"))
summary(res.cut)
p_cutoff_D1<-plot(res.cut, "delta_D", palette = "npg")
# delta_diameter & delta_volume
# survival_data[survival_data$delta_D> 0.2,]$delta_D=2 #病灶直径增大量超过20%
# survival_data[survival_data$delta_D>= -0.3 & survival_data$delta_D<= 0.2,]$delta_D=1 #病灶直径SD
survival_data[survival_data$delta_D>= -0.3,]$delta_D=1 #病灶直径缩小量未超过30%
survival_data[survival_data$delta_D< -0.3,]$delta_D=0 #病灶直径缩小量超过30%
# survival_data[survival_data$delta_V> 0.2,]$delta_V=2 #病灶体积增大量超过20%
# survival_data[survival_data$delta_V>= -0.3 & survival_data$delta_V<= 0.2,]$delta_V=1 #病灶体积SD
survival_data[survival_data$delta_V>= -0.3,]$delta_V=1 #病灶体积缩小量未超过30%
survival_data[survival_data$delta_V< -0.3,]$delta_V=0 #病灶体积缩小量超过30%
#修改columns名称ΔD or ΔV
colnames(survival_data)[2] = 'ΔD'
colnames(survival_data)[3] = 'ΔV'
attach(survival_data)
fit <- survfit(Surv(time,status) ~ ΔD, data = survival_data) # 数据集来源
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔD, nboot = 100)
pv
p_surv_D<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Diameter)")
attach(survival_data)
Surv(time,status)
fit <- survfit(Surv(time,status) ~ ΔV, data = survival_data) # 数据集来源
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔV, nboot = 100)
pv
p_surv_V<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Volume)")
p<-ggarrange(p_surv_D$plot, p_surv_V$plot, nrow = 1, ncol = 2) #labels = c('A','B'),
annotate_figure(p, top = text_grob("Kaplan-Meier survival curve",color = "black", size = 14))
# Figure6 survival analysis--------------------------------------------------------------------------
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library("openxlsx")
library(survival)
library(survminer)
library(rio)
library(TSHRC)
library(dplyr)
data_root = './data'
survival_data_path = paste(data_root, "survival_record.xlsx", sep = "/")
D_V_results_path = paste(data_root, "D_V_all.csv", sep = "/")
survival_data = read.xlsx(survival_data_path, sheet = 'Sheet1')
# survival_data = survival_data[-which(is.na(survival_data$final_result)),]
# survival_data = survival_data[-which(is.na(survival_data$time)),]
# survival_data = survival_data[survival_data$follow_up!="死亡几年不祥", ]
survival_data$status = 1-survival_data$final_result
D_V_results = read.csv(D_V_results_path)
for(i in 1: dim(survival_data)[1]){
p_id = survival_data$patient.reindex[i]
t1 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]])==4){
t1 = paste(t1, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][4], sep="_")
}
t2 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]])==4){
t2 = paste(t2, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][4], sep="_")
}
t1_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_Maximum3DDiameter
t1_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_MeshVolume
t2_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_Maximum3DDiameter
t2_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_MeshVolume
delta_D = (t2_D-t1_D)/t1_D
delta_V = (t2_V-t1_V)/t1_V
survival_data[survival_data$patient.reindex==p_id,]$delta_D = delta_D
survival_data[survival_data$patient.reindex==p_id,]$delta_V = delta_V
}
survival_data = select(survival_data, time, delta_D, delta_V, status)
res.cut <- surv_cutpoint(survival_data, time = "time", event = "status", variables = c("delta_D"))
summary(res.cut)
p_cutoff_D1<-plot(res.cut, "delta_D", palette = "npg")
# delta_diameter & delta_volume
survival_data[survival_data$delta_D>= -0.3,]$delta_D=1
survival_data[survival_data$delta_D< -0.3,]$delta_D=0
survival_data[survival_data$delta_V>= -0.3,]$delta_V=1
survival_data[survival_data$delta_V< -0.3,]$delta_V=0
colnames(survival_data)[2] = 'ΔD'
colnames(survival_data)[3] = 'ΔV'
attach(survival_data)
fit <- survfit(Surv(time,status) ~ ΔD, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔD, nboot = 100)
pv
p_surv_D<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Diameter)")
attach(survival_data)
Surv(time,status)
fit <- survfit(Surv(time,status) ~ ΔV, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔV, nboot = 100)
pv
p_surv_V<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Volume)")
p<-ggarrange(p_surv_D$plot, p_surv_V$plot, nrow = 1, ncol = 2) #labels = c('A','B'),
annotate_figure(p, top = text_grob("Kaplan-Meier survival curve",color = "black", size = 14))
# Figure6 survival analysis--------------------------------------------------------------------------
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library("openxlsx")
library(survival)
library(survminer)
library(rio)
library(TSHRC)
library(dplyr)
data_root = './data'
survival_data_path = paste(data_root, "survival_record.xlsx", sep = "/")
D_V_results_path = paste(data_root, "D_V_all.csv", sep = "/")
survival_data = read.xlsx(survival_data_path, sheet = 'Sheet1')
# survival_data = survival_data[-which(is.na(survival_data$final_result)),]
# survival_data = survival_data[-which(is.na(survival_data$time)),]
# survival_data = survival_data[survival_data$follow_up!="死亡几年不祥", ]
survival_data$status = 1-survival_data$final_result
D_V_results = read.csv(D_V_results_path)
for(i in 1: dim(survival_data)[1]){
p_id = survival_data$patient.reindex[i]
t1 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]])==4){
t1 = paste(t1, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][4], sep="_")
}
t2 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]])==4){
t2 = paste(t2, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][4], sep="_")
}
t1_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_Maximum3DDiameter
t1_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_MeshVolume
t2_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_Maximum3DDiameter
t2_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_MeshVolume
delta_D = (t2_D-t1_D)/t1_D
delta_V = (t2_V-t1_V)/t1_V
survival_data[survival_data$patient.reindex==p_id,]$delta_D = delta_D
survival_data[survival_data$patient.reindex==p_id,]$delta_V = delta_V
}
survival_data = select(survival_data, time, delta_D, delta_V, status)
survival_data[survival_data$delta_D>= -0.3,]$delta_D=1
survival_data[survival_data$delta_D< -0.3,]$delta_D=0
survival_data[survival_data$delta_V>= -0.3,]$delta_V=1
survival_data[survival_data$delta_V< -0.3,]$delta_V=0
colnames(survival_data)[2] = 'ΔD'
colnames(survival_data)[3] = 'ΔV'
svg(file= "./figures/figure6.svg",width=8, height=8)
attach(survival_data)
fit <- survfit(Surv(time,status) ~ ΔD, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔD, nboot = 100)
pv
p_surv_D<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Diameter)")
attach(survival_data)
Surv(time,status)
fit <- survfit(Surv(time,status) ~ ΔV, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔV, nboot = 100)
pv
p_surv_V<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Volume)")
p<-ggarrange(p_surv_D$plot, p_surv_V$plot, nrow = 1, ncol = 2) #labels = c('A','B'),
annotate_figure(p, top = text_grob("Kaplan-Meier survival curve",color = "black", size = 14))
dev.off()
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library("openxlsx")
library(survival)
library(survminer)
library(rio)
library(TSHRC)
library(dplyr)
data_root = './data'
survival_data_path = paste(data_root, "survival_record.xlsx", sep = "/")
D_V_results_path = paste(data_root, "D_V_all.csv", sep = "/")
survival_data = read.xlsx(survival_data_path, sheet = 'Sheet1')
survival_data$status = 1-survival_data$final_result
D_V_results = read.csv(D_V_results_path)
for(i in 1: dim(survival_data)[1]){
p_id = survival_data$patient.reindex[i]
t1 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]])==4){
t1 = paste(t1, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$patient_id_initial, "_")[[1]][4], sep="_")
}
t2 = strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][3]
if(length(strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]])==4){
t2 = paste(t2, strsplit(survival_data[survival_data$patient.reindex==p_id, ]$`early_treatment_cycle`, "_")[[1]][4], sep="_")
}
t1_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_Maximum3DDiameter
t1_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t1)$original_shape_MeshVolume
t2_D = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_Maximum3DDiameter
t2_V = subset(D_V_results, D_V_results$patient_id==p_id & D_V_results$time==t2)$original_shape_MeshVolume
delta_D = (t2_D-t1_D)/t1_D
delta_V = (t2_V-t1_V)/t1_V
survival_data[survival_data$patient.reindex==p_id,]$delta_D = delta_D
survival_data[survival_data$patient.reindex==p_id,]$delta_V = delta_V
}
survival_data = select(survival_data, time, delta_D, delta_V, status)
survival_data[survival_data$delta_D>= -0.3,]$delta_D=1
survival_data[survival_data$delta_D< -0.3,]$delta_D=0
survival_data[survival_data$delta_V>= -0.3,]$delta_V=1
survival_data[survival_data$delta_V< -0.3,]$delta_V=0
colnames(survival_data)[2] = 'ΔD'
colnames(survival_data)[3] = 'ΔV'
svg(file= "./figures/figure6.svg",width=16, height=8)
attach(survival_data)
fit <- survfit(Surv(time,status) ~ ΔD, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔD, nboot = 100)
p_surv_D<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Diameter)")
attach(survival_data)
Surv(time,status)
fit <- survfit(Surv(time,status) ~ ΔV, data = survival_data)
pv <- twostage(survival_data$time,survival_data$status, survival_data$ΔV, nboot = 100)
p_surv_V<-ggsurvplot(fit, data = survival_data, pval = TRUE)+
labs(x="Time", y="Proportion of survival",
title = "RECIST(Volume)")
p<-ggarrange(p_surv_D$plot, p_surv_V$plot, nrow = 1, ncol = 2) #labels = c('A','B'),
annotate_figure(p, top = text_grob("Kaplan-Meier survival curve",color = "black", size = 14))
dev.off()
# Table3 regression analysis--------------------------------------------------------------------------
library(rio)
library("pscl")
library("caret")
library(ggplot2)
# Table3 regression analysis--------------------------------------------------------------------------
library(rio)
library("pscl")
library("caret")
library(ggplot2)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rio)
library("pscl")
library(ggplot2)
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "chemo")
data[data$MPR_label!='nonMPR',]$MPR_label=1 #"MPR"
View(data)
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "chemo")
data[data$MPR_label!='nonMPR',]$MPR_label=1 #"MPR"
data[data$MPR_label!='nonMPR',]
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$MPR_decrease, decreasing = T),]
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
eq_delta_volume <- substitute(italic(y) == a %.% italic(x)+b~","~italic(R)^2~"="~r2~","~italic(P)~"="~p~","~italic(abs(COR))~"="~c, l_delta_volume)
p_volume<-ggplot(data,aes(x=delta_volume,y=residual_tumor)) +
geom_point(shape=19) + xlab("delta_volume") + ylab("Residual tumor")+
geom_smooth(method = lm)+
geom_text(aes(x = -0.5, y = 150, label = as.character(as.expression(eq_delta_volume))), parse = TRUE)
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
eq_delta_diameter_3D <- substitute(italic(y) == a %.% italic(x)+b~","~italic(R)^2~"="~r2~","~italic(P)~"="~p~","~italic(abs(COR))~"="~c, l_delta_diameter_3D)
p_diameter_3D<-ggplot(data,aes(x=delta_diameter_3D,y=residual_tumor)) +
geom_point(shape=19) + xlab("delta_diameter_3D") + ylab("Residual tumor")+
geom_smooth(method = lm)+
geom_text(aes(x = -0.69, y = 100, label = as.character(as.expression(eq_delta_diameter_3D))), parse = TRUE)
p<-ggarrange(p_diameter_3D, p_volume,
labels = c('A', 'B'), nrow = 1, ncol = 2)
annotate_figure(p, top = text_grob("Linear Regression and Pearson Correlation",
color = "black", size = 14))
cor_volume
cor_3d_diameter
format(summary(model)$r.squared
}
l_delta_volume
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rio)
library("pscl")
library(ggplot2)
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "chemo")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
# PCC
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "immun")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
# combine
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "combine")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
#pearson correlation coefficient and linear regression analysis--------------------------------------------------------------------------
library(rio)
library("pscl")
library("caret")
library(ggplot2)
rm(list = ls())
data <- import("clipboard", header = T)
data[data$MPR_label!='非MPR',]$MPR_label=1 #"MPR"
data[data$MPR_label=='非MPR',]$MPR_label=0 #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$MPR_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$MPR_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$MPR_decrease,method = "pearson")
data <- import("clipboard", header = T)
data[data$MPR_label!='非MPR',]$MPR_label=1 #"MPR"
data[data$MPR_label=='非MPR',]$MPR_label=0 #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$MPR_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$MPR_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$MPR_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_MPR ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
#pearson correlation coefficient and linear regression analysis--------------------------------------------------------------------------
library(rio)
# Table3 regression analysis--------------------------------------------------------------------------
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rio)
library("pscl")
library(ggplot2)
# chemotherapy
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "chemo")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
# immunotherapy
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "immun")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
# combine
data <- read_excel("./data/D_V_35patients.xlsx", sheet = "combine")
data[data$MPR_label!='nonMPR',]$MPR_label='1' #"MPR"
data[data$MPR_label=='nonMPR',]$MPR_label='0' #"Non-MPR"
data$MPR_label=as.numeric(data$MPR_label)
data = data[order(data$tumor_decrease, decreasing = T),]
cor_volume = cor(data$delta_volume,data$tumor_decrease,method = "pearson")
cor_3d_diameter = cor(data$delta_diameter_3D,data$tumor_decrease,method = "pearson")
model_delta_volume<-lm(formula = residual_tumor ~ delta_volume, data = data)
summary(model_delta_volume)
model = model_delta_volume
cor_value = cor_volume
l_delta_volume <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
model_delta_diameter_3D<-lm(formula = residual_tumor ~ delta_diameter_3D, data = data)
summary(model_delta_diameter_3D)
model = model_delta_diameter_3D
cor_value = cor_3d_diameter
l_delta_diameter_3D <- list(b = as.numeric(format(coef(model)[1], digits = 4)),
a = as.numeric(format(coef(model)[2], digits = 4)),
r2 = format(summary(model)$r.squared, digits = 4),
p = format(summary(model)$coefficients[2,4], digits = 4),
c = format(cor_value, digits = 4))
